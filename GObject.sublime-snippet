<snippet>
    <content><![CDATA[
/* Generated from input '${1:class-name}' */
#include "${1/ /-/g}.h"

typedef struct
{
  ${3:/* private stuff */}
} ${1/[\W_]*([^_\W]+)[\W_]*/\u\1/g}Private;

G_DEFINE_TYPE_WITH_PRIVATE (${1/[\W_]*([^_\W]+)[\W_]*/\u\1/g}, ${1/([^\w])|(\w)/(?1_:\L\2)/g}, ${2:G_TYPE_OBJECT})

enum {
  PROP_0,
  N_PROPS
};

static GParamSpec *properties [N_PROPS];

${1/[\W_]*([^_\W]+)[\W_]*/\u\1/g} *
${1/([^\w])|(\w)/(?1_:\L\2)/g}_new (void)
{
  return g_object_new (${1/^[\W_]*([^_\W]+)[\W_]+[^_\W].*|([^_\W]+).*/\U\2\1_TYPE_/}${1/(^[\W_]*[^_\W]+[\W_]+)|([^_\W]+)|([\W_])/\U\2(?3_:)/g}, NULL);
}

static void
${1/([^\w])|(\w)/(?1_:\L\2)/g}_finalize (GObject *object)
{
  ${1/[\W_]*([^_\W]+)[\W_]*/\u\1/g} *self = (${1/[\W_]*([^_\W]+)[\W_]*/\u\1/g} *)object;
  ${1/[\W_]*([^_\W]+)[\W_]*/\u\1/g}Private *priv = ${1/([^\w])|(\w)/(?1_:\L\2)/g}_get_instance_private (self);

  G_OBJECT_CLASS (${1/([^\w])|(\w)/(?1_:\L\2)/g}_parent_class)->finalize (object);
}

static void
${1/([^\w])|(\w)/(?1_:\L\2)/g}_get_property (GObject    *object,
${1/./ /g}               guint       prop_id,
${1/./ /g}               GValue     *value,
${1/./ /g}               GParamSpec *pspec)
{
  ${1/[\W_]*([^_\W]+)[\W_]*/\u\1/g} *self = ${1/([\w]+)|([\W_])/\U\1(?2_:)/g} (object);

  switch (prop_id)
    {
    default:
      G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
    }
}

static void
${1/([^\w])|(\w)/(?1_:\L\2)/g}_set_property (GObject      *object,
${1/./ /g}               guint         prop_id,
${1/./ /g}               const GValue *value,
${1/./ /g}               GParamSpec   *pspec)
{
  ${1/[\W_]*([^_\W]+)[\W_]*/\u\1/g} *self = ${1/(.+)/\U$1/g} (object);

  switch (prop_id)
    {
    default:
      G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
    }
}

static void
${1/([^\w])|(\w)/(?1_:\L\2)/g}_class_init (${1/[\W_]*([^_\W]+)[\W_]*/\u\1/g}Class *klass)
{
  GObjectClass *object_class = G_OBJECT_CLASS (klass);

  object_class->finalize = ${1/([^\w])|(\w)/(?1_:\L\2)/g}_finalize;
  object_class->get_property = ${1/([^\w])|(\w)/(?1_:\L\2)/g}_get_property;
  object_class->set_property = ${1/([^\w])|(\w)/(?1_:\L\2)/g}_set_property;
}

static void
${1/([^\w])|(\w)/(?1_:\L\2)/g}_init (${1/[\W_]*([^_\W]+)[\W_]*/\u\1/g} *self)
{
}
]]></content>
    <scope>source.c,source.c++</scope>
    <description>Create GObject type Source</description>
</snippet>
